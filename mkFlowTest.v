//
// Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
//
// On Fri Sep  1 12:29:25 IST 2023
//
//
// Ports:
// Name                         I/O  size props
// RDY_put                        O     1
// get                            O    16
// RDY_get                        O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// put_datas                      I    16 reg
// get_index                      I    16
// EN_put                         I     1
//
// Combinational paths from inputs to outputs:
//   get_index -> get
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkFlowTest(CLK,
		  RST_N,

		  put_datas,
		  EN_put,
		  RDY_put,

		  get_index,
		  get,
		  RDY_get);
  input  CLK;
  input  RST_N;

  // action method put
  input  [15 : 0] put_datas;
  input  EN_put;
  output RDY_put;

  // value method get
  input  [15 : 0] get_index;
  output [15 : 0] get;
  output RDY_get;

  // signals for module outputs
  reg [15 : 0] get;
  wire RDY_get, RDY_put;

  // register cache_0
  reg [15 : 0] cache_0;
  wire [15 : 0] cache_0$D_IN;
  wire cache_0$EN;

  // register cache_1
  reg [15 : 0] cache_1;
  wire [15 : 0] cache_1$D_IN;
  wire cache_1$EN;

  // register cache_10
  reg [15 : 0] cache_10;
  wire [15 : 0] cache_10$D_IN;
  wire cache_10$EN;

  // register cache_100
  reg [15 : 0] cache_100;
  wire [15 : 0] cache_100$D_IN;
  wire cache_100$EN;

  // register cache_101
  reg [15 : 0] cache_101;
  wire [15 : 0] cache_101$D_IN;
  wire cache_101$EN;

  // register cache_102
  reg [15 : 0] cache_102;
  wire [15 : 0] cache_102$D_IN;
  wire cache_102$EN;

  // register cache_103
  reg [15 : 0] cache_103;
  wire [15 : 0] cache_103$D_IN;
  wire cache_103$EN;

  // register cache_104
  reg [15 : 0] cache_104;
  wire [15 : 0] cache_104$D_IN;
  wire cache_104$EN;

  // register cache_105
  reg [15 : 0] cache_105;
  wire [15 : 0] cache_105$D_IN;
  wire cache_105$EN;

  // register cache_106
  reg [15 : 0] cache_106;
  wire [15 : 0] cache_106$D_IN;
  wire cache_106$EN;

  // register cache_107
  reg [15 : 0] cache_107;
  wire [15 : 0] cache_107$D_IN;
  wire cache_107$EN;

  // register cache_108
  reg [15 : 0] cache_108;
  wire [15 : 0] cache_108$D_IN;
  wire cache_108$EN;

  // register cache_109
  reg [15 : 0] cache_109;
  wire [15 : 0] cache_109$D_IN;
  wire cache_109$EN;

  // register cache_11
  reg [15 : 0] cache_11;
  wire [15 : 0] cache_11$D_IN;
  wire cache_11$EN;

  // register cache_110
  reg [15 : 0] cache_110;
  wire [15 : 0] cache_110$D_IN;
  wire cache_110$EN;

  // register cache_111
  reg [15 : 0] cache_111;
  wire [15 : 0] cache_111$D_IN;
  wire cache_111$EN;

  // register cache_112
  reg [15 : 0] cache_112;
  wire [15 : 0] cache_112$D_IN;
  wire cache_112$EN;

  // register cache_113
  reg [15 : 0] cache_113;
  wire [15 : 0] cache_113$D_IN;
  wire cache_113$EN;

  // register cache_114
  reg [15 : 0] cache_114;
  wire [15 : 0] cache_114$D_IN;
  wire cache_114$EN;

  // register cache_115
  reg [15 : 0] cache_115;
  wire [15 : 0] cache_115$D_IN;
  wire cache_115$EN;

  // register cache_116
  reg [15 : 0] cache_116;
  wire [15 : 0] cache_116$D_IN;
  wire cache_116$EN;

  // register cache_117
  reg [15 : 0] cache_117;
  wire [15 : 0] cache_117$D_IN;
  wire cache_117$EN;

  // register cache_118
  reg [15 : 0] cache_118;
  wire [15 : 0] cache_118$D_IN;
  wire cache_118$EN;

  // register cache_119
  reg [15 : 0] cache_119;
  wire [15 : 0] cache_119$D_IN;
  wire cache_119$EN;

  // register cache_12
  reg [15 : 0] cache_12;
  wire [15 : 0] cache_12$D_IN;
  wire cache_12$EN;

  // register cache_120
  reg [15 : 0] cache_120;
  wire [15 : 0] cache_120$D_IN;
  wire cache_120$EN;

  // register cache_121
  reg [15 : 0] cache_121;
  wire [15 : 0] cache_121$D_IN;
  wire cache_121$EN;

  // register cache_122
  reg [15 : 0] cache_122;
  wire [15 : 0] cache_122$D_IN;
  wire cache_122$EN;

  // register cache_123
  reg [15 : 0] cache_123;
  wire [15 : 0] cache_123$D_IN;
  wire cache_123$EN;

  // register cache_124
  reg [15 : 0] cache_124;
  wire [15 : 0] cache_124$D_IN;
  wire cache_124$EN;

  // register cache_125
  reg [15 : 0] cache_125;
  wire [15 : 0] cache_125$D_IN;
  wire cache_125$EN;

  // register cache_126
  reg [15 : 0] cache_126;
  wire [15 : 0] cache_126$D_IN;
  wire cache_126$EN;

  // register cache_127
  reg [15 : 0] cache_127;
  wire [15 : 0] cache_127$D_IN;
  wire cache_127$EN;

  // register cache_13
  reg [15 : 0] cache_13;
  wire [15 : 0] cache_13$D_IN;
  wire cache_13$EN;

  // register cache_14
  reg [15 : 0] cache_14;
  wire [15 : 0] cache_14$D_IN;
  wire cache_14$EN;

  // register cache_15
  reg [15 : 0] cache_15;
  wire [15 : 0] cache_15$D_IN;
  wire cache_15$EN;

  // register cache_16
  reg [15 : 0] cache_16;
  wire [15 : 0] cache_16$D_IN;
  wire cache_16$EN;

  // register cache_17
  reg [15 : 0] cache_17;
  wire [15 : 0] cache_17$D_IN;
  wire cache_17$EN;

  // register cache_18
  reg [15 : 0] cache_18;
  wire [15 : 0] cache_18$D_IN;
  wire cache_18$EN;

  // register cache_19
  reg [15 : 0] cache_19;
  wire [15 : 0] cache_19$D_IN;
  wire cache_19$EN;

  // register cache_2
  reg [15 : 0] cache_2;
  wire [15 : 0] cache_2$D_IN;
  wire cache_2$EN;

  // register cache_20
  reg [15 : 0] cache_20;
  wire [15 : 0] cache_20$D_IN;
  wire cache_20$EN;

  // register cache_21
  reg [15 : 0] cache_21;
  wire [15 : 0] cache_21$D_IN;
  wire cache_21$EN;

  // register cache_22
  reg [15 : 0] cache_22;
  wire [15 : 0] cache_22$D_IN;
  wire cache_22$EN;

  // register cache_23
  reg [15 : 0] cache_23;
  wire [15 : 0] cache_23$D_IN;
  wire cache_23$EN;

  // register cache_24
  reg [15 : 0] cache_24;
  wire [15 : 0] cache_24$D_IN;
  wire cache_24$EN;

  // register cache_25
  reg [15 : 0] cache_25;
  wire [15 : 0] cache_25$D_IN;
  wire cache_25$EN;

  // register cache_26
  reg [15 : 0] cache_26;
  wire [15 : 0] cache_26$D_IN;
  wire cache_26$EN;

  // register cache_27
  reg [15 : 0] cache_27;
  wire [15 : 0] cache_27$D_IN;
  wire cache_27$EN;

  // register cache_28
  reg [15 : 0] cache_28;
  wire [15 : 0] cache_28$D_IN;
  wire cache_28$EN;

  // register cache_29
  reg [15 : 0] cache_29;
  wire [15 : 0] cache_29$D_IN;
  wire cache_29$EN;

  // register cache_3
  reg [15 : 0] cache_3;
  wire [15 : 0] cache_3$D_IN;
  wire cache_3$EN;

  // register cache_30
  reg [15 : 0] cache_30;
  wire [15 : 0] cache_30$D_IN;
  wire cache_30$EN;

  // register cache_31
  reg [15 : 0] cache_31;
  wire [15 : 0] cache_31$D_IN;
  wire cache_31$EN;

  // register cache_32
  reg [15 : 0] cache_32;
  wire [15 : 0] cache_32$D_IN;
  wire cache_32$EN;

  // register cache_33
  reg [15 : 0] cache_33;
  wire [15 : 0] cache_33$D_IN;
  wire cache_33$EN;

  // register cache_34
  reg [15 : 0] cache_34;
  wire [15 : 0] cache_34$D_IN;
  wire cache_34$EN;

  // register cache_35
  reg [15 : 0] cache_35;
  wire [15 : 0] cache_35$D_IN;
  wire cache_35$EN;

  // register cache_36
  reg [15 : 0] cache_36;
  wire [15 : 0] cache_36$D_IN;
  wire cache_36$EN;

  // register cache_37
  reg [15 : 0] cache_37;
  wire [15 : 0] cache_37$D_IN;
  wire cache_37$EN;

  // register cache_38
  reg [15 : 0] cache_38;
  wire [15 : 0] cache_38$D_IN;
  wire cache_38$EN;

  // register cache_39
  reg [15 : 0] cache_39;
  wire [15 : 0] cache_39$D_IN;
  wire cache_39$EN;

  // register cache_4
  reg [15 : 0] cache_4;
  wire [15 : 0] cache_4$D_IN;
  wire cache_4$EN;

  // register cache_40
  reg [15 : 0] cache_40;
  wire [15 : 0] cache_40$D_IN;
  wire cache_40$EN;

  // register cache_41
  reg [15 : 0] cache_41;
  wire [15 : 0] cache_41$D_IN;
  wire cache_41$EN;

  // register cache_42
  reg [15 : 0] cache_42;
  wire [15 : 0] cache_42$D_IN;
  wire cache_42$EN;

  // register cache_43
  reg [15 : 0] cache_43;
  wire [15 : 0] cache_43$D_IN;
  wire cache_43$EN;

  // register cache_44
  reg [15 : 0] cache_44;
  wire [15 : 0] cache_44$D_IN;
  wire cache_44$EN;

  // register cache_45
  reg [15 : 0] cache_45;
  wire [15 : 0] cache_45$D_IN;
  wire cache_45$EN;

  // register cache_46
  reg [15 : 0] cache_46;
  wire [15 : 0] cache_46$D_IN;
  wire cache_46$EN;

  // register cache_47
  reg [15 : 0] cache_47;
  wire [15 : 0] cache_47$D_IN;
  wire cache_47$EN;

  // register cache_48
  reg [15 : 0] cache_48;
  wire [15 : 0] cache_48$D_IN;
  wire cache_48$EN;

  // register cache_49
  reg [15 : 0] cache_49;
  wire [15 : 0] cache_49$D_IN;
  wire cache_49$EN;

  // register cache_5
  reg [15 : 0] cache_5;
  wire [15 : 0] cache_5$D_IN;
  wire cache_5$EN;

  // register cache_50
  reg [15 : 0] cache_50;
  wire [15 : 0] cache_50$D_IN;
  wire cache_50$EN;

  // register cache_51
  reg [15 : 0] cache_51;
  wire [15 : 0] cache_51$D_IN;
  wire cache_51$EN;

  // register cache_52
  reg [15 : 0] cache_52;
  wire [15 : 0] cache_52$D_IN;
  wire cache_52$EN;

  // register cache_53
  reg [15 : 0] cache_53;
  wire [15 : 0] cache_53$D_IN;
  wire cache_53$EN;

  // register cache_54
  reg [15 : 0] cache_54;
  wire [15 : 0] cache_54$D_IN;
  wire cache_54$EN;

  // register cache_55
  reg [15 : 0] cache_55;
  wire [15 : 0] cache_55$D_IN;
  wire cache_55$EN;

  // register cache_56
  reg [15 : 0] cache_56;
  wire [15 : 0] cache_56$D_IN;
  wire cache_56$EN;

  // register cache_57
  reg [15 : 0] cache_57;
  wire [15 : 0] cache_57$D_IN;
  wire cache_57$EN;

  // register cache_58
  reg [15 : 0] cache_58;
  wire [15 : 0] cache_58$D_IN;
  wire cache_58$EN;

  // register cache_59
  reg [15 : 0] cache_59;
  wire [15 : 0] cache_59$D_IN;
  wire cache_59$EN;

  // register cache_6
  reg [15 : 0] cache_6;
  wire [15 : 0] cache_6$D_IN;
  wire cache_6$EN;

  // register cache_60
  reg [15 : 0] cache_60;
  wire [15 : 0] cache_60$D_IN;
  wire cache_60$EN;

  // register cache_61
  reg [15 : 0] cache_61;
  wire [15 : 0] cache_61$D_IN;
  wire cache_61$EN;

  // register cache_62
  reg [15 : 0] cache_62;
  wire [15 : 0] cache_62$D_IN;
  wire cache_62$EN;

  // register cache_63
  reg [15 : 0] cache_63;
  wire [15 : 0] cache_63$D_IN;
  wire cache_63$EN;

  // register cache_64
  reg [15 : 0] cache_64;
  wire [15 : 0] cache_64$D_IN;
  wire cache_64$EN;

  // register cache_65
  reg [15 : 0] cache_65;
  wire [15 : 0] cache_65$D_IN;
  wire cache_65$EN;

  // register cache_66
  reg [15 : 0] cache_66;
  wire [15 : 0] cache_66$D_IN;
  wire cache_66$EN;

  // register cache_67
  reg [15 : 0] cache_67;
  wire [15 : 0] cache_67$D_IN;
  wire cache_67$EN;

  // register cache_68
  reg [15 : 0] cache_68;
  wire [15 : 0] cache_68$D_IN;
  wire cache_68$EN;

  // register cache_69
  reg [15 : 0] cache_69;
  wire [15 : 0] cache_69$D_IN;
  wire cache_69$EN;

  // register cache_7
  reg [15 : 0] cache_7;
  wire [15 : 0] cache_7$D_IN;
  wire cache_7$EN;

  // register cache_70
  reg [15 : 0] cache_70;
  wire [15 : 0] cache_70$D_IN;
  wire cache_70$EN;

  // register cache_71
  reg [15 : 0] cache_71;
  wire [15 : 0] cache_71$D_IN;
  wire cache_71$EN;

  // register cache_72
  reg [15 : 0] cache_72;
  wire [15 : 0] cache_72$D_IN;
  wire cache_72$EN;

  // register cache_73
  reg [15 : 0] cache_73;
  wire [15 : 0] cache_73$D_IN;
  wire cache_73$EN;

  // register cache_74
  reg [15 : 0] cache_74;
  wire [15 : 0] cache_74$D_IN;
  wire cache_74$EN;

  // register cache_75
  reg [15 : 0] cache_75;
  wire [15 : 0] cache_75$D_IN;
  wire cache_75$EN;

  // register cache_76
  reg [15 : 0] cache_76;
  wire [15 : 0] cache_76$D_IN;
  wire cache_76$EN;

  // register cache_77
  reg [15 : 0] cache_77;
  wire [15 : 0] cache_77$D_IN;
  wire cache_77$EN;

  // register cache_78
  reg [15 : 0] cache_78;
  wire [15 : 0] cache_78$D_IN;
  wire cache_78$EN;

  // register cache_79
  reg [15 : 0] cache_79;
  wire [15 : 0] cache_79$D_IN;
  wire cache_79$EN;

  // register cache_8
  reg [15 : 0] cache_8;
  wire [15 : 0] cache_8$D_IN;
  wire cache_8$EN;

  // register cache_80
  reg [15 : 0] cache_80;
  wire [15 : 0] cache_80$D_IN;
  wire cache_80$EN;

  // register cache_81
  reg [15 : 0] cache_81;
  wire [15 : 0] cache_81$D_IN;
  wire cache_81$EN;

  // register cache_82
  reg [15 : 0] cache_82;
  wire [15 : 0] cache_82$D_IN;
  wire cache_82$EN;

  // register cache_83
  reg [15 : 0] cache_83;
  wire [15 : 0] cache_83$D_IN;
  wire cache_83$EN;

  // register cache_84
  reg [15 : 0] cache_84;
  wire [15 : 0] cache_84$D_IN;
  wire cache_84$EN;

  // register cache_85
  reg [15 : 0] cache_85;
  wire [15 : 0] cache_85$D_IN;
  wire cache_85$EN;

  // register cache_86
  reg [15 : 0] cache_86;
  wire [15 : 0] cache_86$D_IN;
  wire cache_86$EN;

  // register cache_87
  reg [15 : 0] cache_87;
  wire [15 : 0] cache_87$D_IN;
  wire cache_87$EN;

  // register cache_88
  reg [15 : 0] cache_88;
  wire [15 : 0] cache_88$D_IN;
  wire cache_88$EN;

  // register cache_89
  reg [15 : 0] cache_89;
  wire [15 : 0] cache_89$D_IN;
  wire cache_89$EN;

  // register cache_9
  reg [15 : 0] cache_9;
  wire [15 : 0] cache_9$D_IN;
  wire cache_9$EN;

  // register cache_90
  reg [15 : 0] cache_90;
  wire [15 : 0] cache_90$D_IN;
  wire cache_90$EN;

  // register cache_91
  reg [15 : 0] cache_91;
  wire [15 : 0] cache_91$D_IN;
  wire cache_91$EN;

  // register cache_92
  reg [15 : 0] cache_92;
  wire [15 : 0] cache_92$D_IN;
  wire cache_92$EN;

  // register cache_93
  reg [15 : 0] cache_93;
  wire [15 : 0] cache_93$D_IN;
  wire cache_93$EN;

  // register cache_94
  reg [15 : 0] cache_94;
  wire [15 : 0] cache_94$D_IN;
  wire cache_94$EN;

  // register cache_95
  reg [15 : 0] cache_95;
  wire [15 : 0] cache_95$D_IN;
  wire cache_95$EN;

  // register cache_96
  reg [15 : 0] cache_96;
  wire [15 : 0] cache_96$D_IN;
  wire cache_96$EN;

  // register cache_97
  reg [15 : 0] cache_97;
  wire [15 : 0] cache_97$D_IN;
  wire cache_97$EN;

  // register cache_98
  reg [15 : 0] cache_98;
  wire [15 : 0] cache_98$D_IN;
  wire cache_98$EN;

  // register cache_99
  reg [15 : 0] cache_99;
  wire [15 : 0] cache_99$D_IN;
  wire cache_99$EN;

  // register ent
  reg [11 : 0] ent;
  wire [11 : 0] ent$D_IN;
  wire ent$EN;

  // register inQ
  reg [2047 : 0] inQ;
  wire [2047 : 0] inQ$D_IN;
  wire inQ$EN;

  // register sum_count
  reg [11 : 0] sum_count;
  wire [11 : 0] sum_count$D_IN;
  wire sum_count$EN;

  // register total_sum
  reg [15 : 0] total_sum;
  wire [15 : 0] total_sum$D_IN;
  wire total_sum$EN;

  // ports of submodule px
  wire [2047 : 0] px$get, px$put_datas;
  wire px$EN_get, px$EN_put, px$RDY_get, px$RDY_put;

  // inputs to muxes for submodule ports
  wire [11 : 0] MUX_ent$write_1__VAL_1;
  wire MUX_ent$write_1__SEL_2;

  // action method put
  assign RDY_put = ent < 12'd128 ;

  // value method get
  always@(get_index or
	  cache_0 or
	  cache_1 or
	  cache_2 or
	  cache_3 or
	  cache_4 or
	  cache_5 or
	  cache_6 or
	  cache_7 or
	  cache_8 or
	  cache_9 or
	  cache_10 or
	  cache_11 or
	  cache_12 or
	  cache_13 or
	  cache_14 or
	  cache_15 or
	  cache_16 or
	  cache_17 or
	  cache_18 or
	  cache_19 or
	  cache_20 or
	  cache_21 or
	  cache_22 or
	  cache_23 or
	  cache_24 or
	  cache_25 or
	  cache_26 or
	  cache_27 or
	  cache_28 or
	  cache_29 or
	  cache_30 or
	  cache_31 or
	  cache_32 or
	  cache_33 or
	  cache_34 or
	  cache_35 or
	  cache_36 or
	  cache_37 or
	  cache_38 or
	  cache_39 or
	  cache_40 or
	  cache_41 or
	  cache_42 or
	  cache_43 or
	  cache_44 or
	  cache_45 or
	  cache_46 or
	  cache_47 or
	  cache_48 or
	  cache_49 or
	  cache_50 or
	  cache_51 or
	  cache_52 or
	  cache_53 or
	  cache_54 or
	  cache_55 or
	  cache_56 or
	  cache_57 or
	  cache_58 or
	  cache_59 or
	  cache_60 or
	  cache_61 or
	  cache_62 or
	  cache_63 or
	  cache_64 or
	  cache_65 or
	  cache_66 or
	  cache_67 or
	  cache_68 or
	  cache_69 or
	  cache_70 or
	  cache_71 or
	  cache_72 or
	  cache_73 or
	  cache_74 or
	  cache_75 or
	  cache_76 or
	  cache_77 or
	  cache_78 or
	  cache_79 or
	  cache_80 or
	  cache_81 or
	  cache_82 or
	  cache_83 or
	  cache_84 or
	  cache_85 or
	  cache_86 or
	  cache_87 or
	  cache_88 or
	  cache_89 or
	  cache_90 or
	  cache_91 or
	  cache_92 or
	  cache_93 or
	  cache_94 or
	  cache_95 or
	  cache_96 or
	  cache_97 or
	  cache_98 or
	  cache_99 or
	  cache_100 or
	  cache_101 or
	  cache_102 or
	  cache_103 or
	  cache_104 or
	  cache_105 or
	  cache_106 or
	  cache_107 or
	  cache_108 or
	  cache_109 or
	  cache_110 or
	  cache_111 or
	  cache_112 or
	  cache_113 or
	  cache_114 or
	  cache_115 or
	  cache_116 or
	  cache_117 or
	  cache_118 or
	  cache_119 or
	  cache_120 or
	  cache_121 or
	  cache_122 or
	  cache_123 or cache_124 or cache_125 or cache_126 or cache_127)
  begin
    case (get_index)
      16'd0: get = cache_0;
      16'd1: get = cache_1;
      16'd2: get = cache_2;
      16'd3: get = cache_3;
      16'd4: get = cache_4;
      16'd5: get = cache_5;
      16'd6: get = cache_6;
      16'd7: get = cache_7;
      16'd8: get = cache_8;
      16'd9: get = cache_9;
      16'd10: get = cache_10;
      16'd11: get = cache_11;
      16'd12: get = cache_12;
      16'd13: get = cache_13;
      16'd14: get = cache_14;
      16'd15: get = cache_15;
      16'd16: get = cache_16;
      16'd17: get = cache_17;
      16'd18: get = cache_18;
      16'd19: get = cache_19;
      16'd20: get = cache_20;
      16'd21: get = cache_21;
      16'd22: get = cache_22;
      16'd23: get = cache_23;
      16'd24: get = cache_24;
      16'd25: get = cache_25;
      16'd26: get = cache_26;
      16'd27: get = cache_27;
      16'd28: get = cache_28;
      16'd29: get = cache_29;
      16'd30: get = cache_30;
      16'd31: get = cache_31;
      16'd32: get = cache_32;
      16'd33: get = cache_33;
      16'd34: get = cache_34;
      16'd35: get = cache_35;
      16'd36: get = cache_36;
      16'd37: get = cache_37;
      16'd38: get = cache_38;
      16'd39: get = cache_39;
      16'd40: get = cache_40;
      16'd41: get = cache_41;
      16'd42: get = cache_42;
      16'd43: get = cache_43;
      16'd44: get = cache_44;
      16'd45: get = cache_45;
      16'd46: get = cache_46;
      16'd47: get = cache_47;
      16'd48: get = cache_48;
      16'd49: get = cache_49;
      16'd50: get = cache_50;
      16'd51: get = cache_51;
      16'd52: get = cache_52;
      16'd53: get = cache_53;
      16'd54: get = cache_54;
      16'd55: get = cache_55;
      16'd56: get = cache_56;
      16'd57: get = cache_57;
      16'd58: get = cache_58;
      16'd59: get = cache_59;
      16'd60: get = cache_60;
      16'd61: get = cache_61;
      16'd62: get = cache_62;
      16'd63: get = cache_63;
      16'd64: get = cache_64;
      16'd65: get = cache_65;
      16'd66: get = cache_66;
      16'd67: get = cache_67;
      16'd68: get = cache_68;
      16'd69: get = cache_69;
      16'd70: get = cache_70;
      16'd71: get = cache_71;
      16'd72: get = cache_72;
      16'd73: get = cache_73;
      16'd74: get = cache_74;
      16'd75: get = cache_75;
      16'd76: get = cache_76;
      16'd77: get = cache_77;
      16'd78: get = cache_78;
      16'd79: get = cache_79;
      16'd80: get = cache_80;
      16'd81: get = cache_81;
      16'd82: get = cache_82;
      16'd83: get = cache_83;
      16'd84: get = cache_84;
      16'd85: get = cache_85;
      16'd86: get = cache_86;
      16'd87: get = cache_87;
      16'd88: get = cache_88;
      16'd89: get = cache_89;
      16'd90: get = cache_90;
      16'd91: get = cache_91;
      16'd92: get = cache_92;
      16'd93: get = cache_93;
      16'd94: get = cache_94;
      16'd95: get = cache_95;
      16'd96: get = cache_96;
      16'd97: get = cache_97;
      16'd98: get = cache_98;
      16'd99: get = cache_99;
      16'd100: get = cache_100;
      16'd101: get = cache_101;
      16'd102: get = cache_102;
      16'd103: get = cache_103;
      16'd104: get = cache_104;
      16'd105: get = cache_105;
      16'd106: get = cache_106;
      16'd107: get = cache_107;
      16'd108: get = cache_108;
      16'd109: get = cache_109;
      16'd110: get = cache_110;
      16'd111: get = cache_111;
      16'd112: get = cache_112;
      16'd113: get = cache_113;
      16'd114: get = cache_114;
      16'd115: get = cache_115;
      16'd116: get = cache_116;
      16'd117: get = cache_117;
      16'd118: get = cache_118;
      16'd119: get = cache_119;
      16'd120: get = cache_120;
      16'd121: get = cache_121;
      16'd122: get = cache_122;
      16'd123: get = cache_123;
      16'd124: get = cache_124;
      16'd125: get = cache_125;
      16'd126: get = cache_126;
      16'd127: get = cache_127;
      default: get = 16'b1010101010101010 /* unspecified value */ ;
    endcase
  end
  assign RDY_get = 1'd1 ;

  // submodule px
  mkBitonic px(.CLK(CLK),
	       .RST_N(RST_N),
	       .put_datas(px$put_datas),
	       .EN_put(px$EN_put),
	       .EN_get(px$EN_get),
	       .RDY_put(px$RDY_put),
	       .get(px$get),
	       .RDY_get(px$RDY_get));

  // inputs to muxes for submodule ports
  assign MUX_ent$write_1__SEL_2 = px$RDY_put && ent == 12'd128 ;
  assign MUX_ent$write_1__VAL_1 = ent + 12'd1 ;

  // register cache_0
  assign cache_0$D_IN = px$get[15:0] ;
  assign cache_0$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_1
  assign cache_1$D_IN = px$get[31:16] ;
  assign cache_1$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_10
  assign cache_10$D_IN = px$get[175:160] ;
  assign cache_10$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_100
  assign cache_100$D_IN = px$get[1615:1600] ;
  assign cache_100$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_101
  assign cache_101$D_IN = px$get[1631:1616] ;
  assign cache_101$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_102
  assign cache_102$D_IN = px$get[1647:1632] ;
  assign cache_102$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_103
  assign cache_103$D_IN = px$get[1663:1648] ;
  assign cache_103$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_104
  assign cache_104$D_IN = px$get[1679:1664] ;
  assign cache_104$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_105
  assign cache_105$D_IN = px$get[1695:1680] ;
  assign cache_105$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_106
  assign cache_106$D_IN = px$get[1711:1696] ;
  assign cache_106$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_107
  assign cache_107$D_IN = px$get[1727:1712] ;
  assign cache_107$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_108
  assign cache_108$D_IN = px$get[1743:1728] ;
  assign cache_108$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_109
  assign cache_109$D_IN = px$get[1759:1744] ;
  assign cache_109$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_11
  assign cache_11$D_IN = px$get[191:176] ;
  assign cache_11$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_110
  assign cache_110$D_IN = px$get[1775:1760] ;
  assign cache_110$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_111
  assign cache_111$D_IN = px$get[1791:1776] ;
  assign cache_111$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_112
  assign cache_112$D_IN = px$get[1807:1792] ;
  assign cache_112$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_113
  assign cache_113$D_IN = px$get[1823:1808] ;
  assign cache_113$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_114
  assign cache_114$D_IN = px$get[1839:1824] ;
  assign cache_114$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_115
  assign cache_115$D_IN = px$get[1855:1840] ;
  assign cache_115$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_116
  assign cache_116$D_IN = px$get[1871:1856] ;
  assign cache_116$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_117
  assign cache_117$D_IN = px$get[1887:1872] ;
  assign cache_117$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_118
  assign cache_118$D_IN = px$get[1903:1888] ;
  assign cache_118$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_119
  assign cache_119$D_IN = px$get[1919:1904] ;
  assign cache_119$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_12
  assign cache_12$D_IN = px$get[207:192] ;
  assign cache_12$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_120
  assign cache_120$D_IN = px$get[1935:1920] ;
  assign cache_120$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_121
  assign cache_121$D_IN = px$get[1951:1936] ;
  assign cache_121$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_122
  assign cache_122$D_IN = px$get[1967:1952] ;
  assign cache_122$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_123
  assign cache_123$D_IN = px$get[1983:1968] ;
  assign cache_123$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_124
  assign cache_124$D_IN = px$get[1999:1984] ;
  assign cache_124$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_125
  assign cache_125$D_IN = px$get[2015:2000] ;
  assign cache_125$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_126
  assign cache_126$D_IN = px$get[2031:2016] ;
  assign cache_126$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_127
  assign cache_127$D_IN = px$get[2047:2032] ;
  assign cache_127$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_13
  assign cache_13$D_IN = px$get[223:208] ;
  assign cache_13$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_14
  assign cache_14$D_IN = px$get[239:224] ;
  assign cache_14$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_15
  assign cache_15$D_IN = px$get[255:240] ;
  assign cache_15$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_16
  assign cache_16$D_IN = px$get[271:256] ;
  assign cache_16$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_17
  assign cache_17$D_IN = px$get[287:272] ;
  assign cache_17$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_18
  assign cache_18$D_IN = px$get[303:288] ;
  assign cache_18$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_19
  assign cache_19$D_IN = px$get[319:304] ;
  assign cache_19$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_2
  assign cache_2$D_IN = px$get[47:32] ;
  assign cache_2$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_20
  assign cache_20$D_IN = px$get[335:320] ;
  assign cache_20$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_21
  assign cache_21$D_IN = px$get[351:336] ;
  assign cache_21$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_22
  assign cache_22$D_IN = px$get[367:352] ;
  assign cache_22$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_23
  assign cache_23$D_IN = px$get[383:368] ;
  assign cache_23$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_24
  assign cache_24$D_IN = px$get[399:384] ;
  assign cache_24$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_25
  assign cache_25$D_IN = px$get[415:400] ;
  assign cache_25$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_26
  assign cache_26$D_IN = px$get[431:416] ;
  assign cache_26$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_27
  assign cache_27$D_IN = px$get[447:432] ;
  assign cache_27$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_28
  assign cache_28$D_IN = px$get[463:448] ;
  assign cache_28$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_29
  assign cache_29$D_IN = px$get[479:464] ;
  assign cache_29$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_3
  assign cache_3$D_IN = px$get[63:48] ;
  assign cache_3$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_30
  assign cache_30$D_IN = px$get[495:480] ;
  assign cache_30$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_31
  assign cache_31$D_IN = px$get[511:496] ;
  assign cache_31$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_32
  assign cache_32$D_IN = px$get[527:512] ;
  assign cache_32$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_33
  assign cache_33$D_IN = px$get[543:528] ;
  assign cache_33$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_34
  assign cache_34$D_IN = px$get[559:544] ;
  assign cache_34$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_35
  assign cache_35$D_IN = px$get[575:560] ;
  assign cache_35$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_36
  assign cache_36$D_IN = px$get[591:576] ;
  assign cache_36$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_37
  assign cache_37$D_IN = px$get[607:592] ;
  assign cache_37$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_38
  assign cache_38$D_IN = px$get[623:608] ;
  assign cache_38$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_39
  assign cache_39$D_IN = px$get[639:624] ;
  assign cache_39$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_4
  assign cache_4$D_IN = px$get[79:64] ;
  assign cache_4$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_40
  assign cache_40$D_IN = px$get[655:640] ;
  assign cache_40$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_41
  assign cache_41$D_IN = px$get[671:656] ;
  assign cache_41$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_42
  assign cache_42$D_IN = px$get[687:672] ;
  assign cache_42$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_43
  assign cache_43$D_IN = px$get[703:688] ;
  assign cache_43$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_44
  assign cache_44$D_IN = px$get[719:704] ;
  assign cache_44$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_45
  assign cache_45$D_IN = px$get[735:720] ;
  assign cache_45$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_46
  assign cache_46$D_IN = px$get[751:736] ;
  assign cache_46$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_47
  assign cache_47$D_IN = px$get[767:752] ;
  assign cache_47$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_48
  assign cache_48$D_IN = px$get[783:768] ;
  assign cache_48$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_49
  assign cache_49$D_IN = px$get[799:784] ;
  assign cache_49$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_5
  assign cache_5$D_IN = px$get[95:80] ;
  assign cache_5$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_50
  assign cache_50$D_IN = px$get[815:800] ;
  assign cache_50$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_51
  assign cache_51$D_IN = px$get[831:816] ;
  assign cache_51$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_52
  assign cache_52$D_IN = px$get[847:832] ;
  assign cache_52$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_53
  assign cache_53$D_IN = px$get[863:848] ;
  assign cache_53$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_54
  assign cache_54$D_IN = px$get[879:864] ;
  assign cache_54$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_55
  assign cache_55$D_IN = px$get[895:880] ;
  assign cache_55$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_56
  assign cache_56$D_IN = px$get[911:896] ;
  assign cache_56$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_57
  assign cache_57$D_IN = px$get[927:912] ;
  assign cache_57$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_58
  assign cache_58$D_IN = px$get[943:928] ;
  assign cache_58$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_59
  assign cache_59$D_IN = px$get[959:944] ;
  assign cache_59$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_6
  assign cache_6$D_IN = px$get[111:96] ;
  assign cache_6$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_60
  assign cache_60$D_IN = px$get[975:960] ;
  assign cache_60$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_61
  assign cache_61$D_IN = px$get[991:976] ;
  assign cache_61$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_62
  assign cache_62$D_IN = px$get[1007:992] ;
  assign cache_62$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_63
  assign cache_63$D_IN = px$get[1023:1008] ;
  assign cache_63$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_64
  assign cache_64$D_IN = px$get[1039:1024] ;
  assign cache_64$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_65
  assign cache_65$D_IN = px$get[1055:1040] ;
  assign cache_65$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_66
  assign cache_66$D_IN = px$get[1071:1056] ;
  assign cache_66$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_67
  assign cache_67$D_IN = px$get[1087:1072] ;
  assign cache_67$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_68
  assign cache_68$D_IN = px$get[1103:1088] ;
  assign cache_68$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_69
  assign cache_69$D_IN = px$get[1119:1104] ;
  assign cache_69$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_7
  assign cache_7$D_IN = px$get[127:112] ;
  assign cache_7$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_70
  assign cache_70$D_IN = px$get[1135:1120] ;
  assign cache_70$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_71
  assign cache_71$D_IN = px$get[1151:1136] ;
  assign cache_71$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_72
  assign cache_72$D_IN = px$get[1167:1152] ;
  assign cache_72$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_73
  assign cache_73$D_IN = px$get[1183:1168] ;
  assign cache_73$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_74
  assign cache_74$D_IN = px$get[1199:1184] ;
  assign cache_74$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_75
  assign cache_75$D_IN = px$get[1215:1200] ;
  assign cache_75$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_76
  assign cache_76$D_IN = px$get[1231:1216] ;
  assign cache_76$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_77
  assign cache_77$D_IN = px$get[1247:1232] ;
  assign cache_77$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_78
  assign cache_78$D_IN = px$get[1263:1248] ;
  assign cache_78$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_79
  assign cache_79$D_IN = px$get[1279:1264] ;
  assign cache_79$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_8
  assign cache_8$D_IN = px$get[143:128] ;
  assign cache_8$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_80
  assign cache_80$D_IN = px$get[1295:1280] ;
  assign cache_80$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_81
  assign cache_81$D_IN = px$get[1311:1296] ;
  assign cache_81$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_82
  assign cache_82$D_IN = px$get[1327:1312] ;
  assign cache_82$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_83
  assign cache_83$D_IN = px$get[1343:1328] ;
  assign cache_83$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_84
  assign cache_84$D_IN = px$get[1359:1344] ;
  assign cache_84$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_85
  assign cache_85$D_IN = px$get[1375:1360] ;
  assign cache_85$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_86
  assign cache_86$D_IN = px$get[1391:1376] ;
  assign cache_86$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_87
  assign cache_87$D_IN = px$get[1407:1392] ;
  assign cache_87$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_88
  assign cache_88$D_IN = px$get[1423:1408] ;
  assign cache_88$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_89
  assign cache_89$D_IN = px$get[1439:1424] ;
  assign cache_89$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_9
  assign cache_9$D_IN = px$get[159:144] ;
  assign cache_9$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_90
  assign cache_90$D_IN = px$get[1455:1440] ;
  assign cache_90$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_91
  assign cache_91$D_IN = px$get[1471:1456] ;
  assign cache_91$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_92
  assign cache_92$D_IN = px$get[1487:1472] ;
  assign cache_92$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_93
  assign cache_93$D_IN = px$get[1503:1488] ;
  assign cache_93$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_94
  assign cache_94$D_IN = px$get[1519:1504] ;
  assign cache_94$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_95
  assign cache_95$D_IN = px$get[1535:1520] ;
  assign cache_95$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_96
  assign cache_96$D_IN = px$get[1551:1536] ;
  assign cache_96$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_97
  assign cache_97$D_IN = px$get[1567:1552] ;
  assign cache_97$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_98
  assign cache_98$D_IN = px$get[1583:1568] ;
  assign cache_98$EN = px$RDY_get && sum_count == 12'd0 ;

  // register cache_99
  assign cache_99$D_IN = px$get[1599:1584] ;
  assign cache_99$EN = px$RDY_get && sum_count == 12'd0 ;

  // register ent
  assign ent$D_IN = EN_put ? MUX_ent$write_1__VAL_1 : 12'd0 ;
  assign ent$EN = EN_put || px$RDY_put && ent == 12'd128 ;

  // register inQ
  assign inQ$D_IN = { inQ[2015:0], 16'd0, put_datas } ;
  assign inQ$EN = EN_put ;

  // register sum_count
  assign sum_count$D_IN = 12'd1 ;
  assign sum_count$EN = px$RDY_get && sum_count == 12'd0 ;

  // register total_sum
  assign total_sum$D_IN = 16'h0 ;
  assign total_sum$EN = 1'b0 ;

  // submodule px
  assign px$put_datas = inQ ;
  assign px$EN_put = MUX_ent$write_1__SEL_2 ;
  assign px$EN_get = px$RDY_get && sum_count == 12'd0 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cache_0 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_1 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_10 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_100 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_101 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_102 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_103 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_104 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_105 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_106 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_107 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_108 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_109 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_11 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_110 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_111 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_112 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_113 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_114 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_115 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_116 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_117 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_118 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_119 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_12 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_120 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_121 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_122 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_123 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_124 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_125 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_126 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_127 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_13 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_14 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_15 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_16 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_17 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_18 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_19 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_2 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_20 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_21 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_22 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_23 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_24 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_25 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_26 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_27 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_28 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_29 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_3 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_30 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_31 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_32 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_33 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_34 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_35 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_36 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_37 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_38 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_39 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_4 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_40 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_41 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_42 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_43 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_44 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_45 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_46 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_47 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_48 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_49 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_5 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_50 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_51 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_52 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_53 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_54 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_55 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_56 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_57 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_58 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_59 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_6 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_60 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_61 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_62 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_63 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_64 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_65 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_66 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_67 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_68 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_69 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_7 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_70 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_71 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_72 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_73 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_74 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_75 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_76 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_77 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_78 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_79 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_8 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_80 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_81 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_82 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_83 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_84 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_85 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_86 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_87 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_88 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_89 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_9 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_90 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_91 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_92 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_93 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_94 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_95 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_96 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_97 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_98 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	cache_99 <= `BSV_ASSIGNMENT_DELAY 16'd0;
	ent <= `BSV_ASSIGNMENT_DELAY 12'd0;
	inQ <= `BSV_ASSIGNMENT_DELAY 2048'd0;
	sum_count <= `BSV_ASSIGNMENT_DELAY 12'd0;
	total_sum <= `BSV_ASSIGNMENT_DELAY 16'd0;
      end
    else
      begin
        if (cache_0$EN) cache_0 <= `BSV_ASSIGNMENT_DELAY cache_0$D_IN;
	if (cache_1$EN) cache_1 <= `BSV_ASSIGNMENT_DELAY cache_1$D_IN;
	if (cache_10$EN) cache_10 <= `BSV_ASSIGNMENT_DELAY cache_10$D_IN;
	if (cache_100$EN) cache_100 <= `BSV_ASSIGNMENT_DELAY cache_100$D_IN;
	if (cache_101$EN) cache_101 <= `BSV_ASSIGNMENT_DELAY cache_101$D_IN;
	if (cache_102$EN) cache_102 <= `BSV_ASSIGNMENT_DELAY cache_102$D_IN;
	if (cache_103$EN) cache_103 <= `BSV_ASSIGNMENT_DELAY cache_103$D_IN;
	if (cache_104$EN) cache_104 <= `BSV_ASSIGNMENT_DELAY cache_104$D_IN;
	if (cache_105$EN) cache_105 <= `BSV_ASSIGNMENT_DELAY cache_105$D_IN;
	if (cache_106$EN) cache_106 <= `BSV_ASSIGNMENT_DELAY cache_106$D_IN;
	if (cache_107$EN) cache_107 <= `BSV_ASSIGNMENT_DELAY cache_107$D_IN;
	if (cache_108$EN) cache_108 <= `BSV_ASSIGNMENT_DELAY cache_108$D_IN;
	if (cache_109$EN) cache_109 <= `BSV_ASSIGNMENT_DELAY cache_109$D_IN;
	if (cache_11$EN) cache_11 <= `BSV_ASSIGNMENT_DELAY cache_11$D_IN;
	if (cache_110$EN) cache_110 <= `BSV_ASSIGNMENT_DELAY cache_110$D_IN;
	if (cache_111$EN) cache_111 <= `BSV_ASSIGNMENT_DELAY cache_111$D_IN;
	if (cache_112$EN) cache_112 <= `BSV_ASSIGNMENT_DELAY cache_112$D_IN;
	if (cache_113$EN) cache_113 <= `BSV_ASSIGNMENT_DELAY cache_113$D_IN;
	if (cache_114$EN) cache_114 <= `BSV_ASSIGNMENT_DELAY cache_114$D_IN;
	if (cache_115$EN) cache_115 <= `BSV_ASSIGNMENT_DELAY cache_115$D_IN;
	if (cache_116$EN) cache_116 <= `BSV_ASSIGNMENT_DELAY cache_116$D_IN;
	if (cache_117$EN) cache_117 <= `BSV_ASSIGNMENT_DELAY cache_117$D_IN;
	if (cache_118$EN) cache_118 <= `BSV_ASSIGNMENT_DELAY cache_118$D_IN;
	if (cache_119$EN) cache_119 <= `BSV_ASSIGNMENT_DELAY cache_119$D_IN;
	if (cache_12$EN) cache_12 <= `BSV_ASSIGNMENT_DELAY cache_12$D_IN;
	if (cache_120$EN) cache_120 <= `BSV_ASSIGNMENT_DELAY cache_120$D_IN;
	if (cache_121$EN) cache_121 <= `BSV_ASSIGNMENT_DELAY cache_121$D_IN;
	if (cache_122$EN) cache_122 <= `BSV_ASSIGNMENT_DELAY cache_122$D_IN;
	if (cache_123$EN) cache_123 <= `BSV_ASSIGNMENT_DELAY cache_123$D_IN;
	if (cache_124$EN) cache_124 <= `BSV_ASSIGNMENT_DELAY cache_124$D_IN;
	if (cache_125$EN) cache_125 <= `BSV_ASSIGNMENT_DELAY cache_125$D_IN;
	if (cache_126$EN) cache_126 <= `BSV_ASSIGNMENT_DELAY cache_126$D_IN;
	if (cache_127$EN) cache_127 <= `BSV_ASSIGNMENT_DELAY cache_127$D_IN;
	if (cache_13$EN) cache_13 <= `BSV_ASSIGNMENT_DELAY cache_13$D_IN;
	if (cache_14$EN) cache_14 <= `BSV_ASSIGNMENT_DELAY cache_14$D_IN;
	if (cache_15$EN) cache_15 <= `BSV_ASSIGNMENT_DELAY cache_15$D_IN;
	if (cache_16$EN) cache_16 <= `BSV_ASSIGNMENT_DELAY cache_16$D_IN;
	if (cache_17$EN) cache_17 <= `BSV_ASSIGNMENT_DELAY cache_17$D_IN;
	if (cache_18$EN) cache_18 <= `BSV_ASSIGNMENT_DELAY cache_18$D_IN;
	if (cache_19$EN) cache_19 <= `BSV_ASSIGNMENT_DELAY cache_19$D_IN;
	if (cache_2$EN) cache_2 <= `BSV_ASSIGNMENT_DELAY cache_2$D_IN;
	if (cache_20$EN) cache_20 <= `BSV_ASSIGNMENT_DELAY cache_20$D_IN;
	if (cache_21$EN) cache_21 <= `BSV_ASSIGNMENT_DELAY cache_21$D_IN;
	if (cache_22$EN) cache_22 <= `BSV_ASSIGNMENT_DELAY cache_22$D_IN;
	if (cache_23$EN) cache_23 <= `BSV_ASSIGNMENT_DELAY cache_23$D_IN;
	if (cache_24$EN) cache_24 <= `BSV_ASSIGNMENT_DELAY cache_24$D_IN;
	if (cache_25$EN) cache_25 <= `BSV_ASSIGNMENT_DELAY cache_25$D_IN;
	if (cache_26$EN) cache_26 <= `BSV_ASSIGNMENT_DELAY cache_26$D_IN;
	if (cache_27$EN) cache_27 <= `BSV_ASSIGNMENT_DELAY cache_27$D_IN;
	if (cache_28$EN) cache_28 <= `BSV_ASSIGNMENT_DELAY cache_28$D_IN;
	if (cache_29$EN) cache_29 <= `BSV_ASSIGNMENT_DELAY cache_29$D_IN;
	if (cache_3$EN) cache_3 <= `BSV_ASSIGNMENT_DELAY cache_3$D_IN;
	if (cache_30$EN) cache_30 <= `BSV_ASSIGNMENT_DELAY cache_30$D_IN;
	if (cache_31$EN) cache_31 <= `BSV_ASSIGNMENT_DELAY cache_31$D_IN;
	if (cache_32$EN) cache_32 <= `BSV_ASSIGNMENT_DELAY cache_32$D_IN;
	if (cache_33$EN) cache_33 <= `BSV_ASSIGNMENT_DELAY cache_33$D_IN;
	if (cache_34$EN) cache_34 <= `BSV_ASSIGNMENT_DELAY cache_34$D_IN;
	if (cache_35$EN) cache_35 <= `BSV_ASSIGNMENT_DELAY cache_35$D_IN;
	if (cache_36$EN) cache_36 <= `BSV_ASSIGNMENT_DELAY cache_36$D_IN;
	if (cache_37$EN) cache_37 <= `BSV_ASSIGNMENT_DELAY cache_37$D_IN;
	if (cache_38$EN) cache_38 <= `BSV_ASSIGNMENT_DELAY cache_38$D_IN;
	if (cache_39$EN) cache_39 <= `BSV_ASSIGNMENT_DELAY cache_39$D_IN;
	if (cache_4$EN) cache_4 <= `BSV_ASSIGNMENT_DELAY cache_4$D_IN;
	if (cache_40$EN) cache_40 <= `BSV_ASSIGNMENT_DELAY cache_40$D_IN;
	if (cache_41$EN) cache_41 <= `BSV_ASSIGNMENT_DELAY cache_41$D_IN;
	if (cache_42$EN) cache_42 <= `BSV_ASSIGNMENT_DELAY cache_42$D_IN;
	if (cache_43$EN) cache_43 <= `BSV_ASSIGNMENT_DELAY cache_43$D_IN;
	if (cache_44$EN) cache_44 <= `BSV_ASSIGNMENT_DELAY cache_44$D_IN;
	if (cache_45$EN) cache_45 <= `BSV_ASSIGNMENT_DELAY cache_45$D_IN;
	if (cache_46$EN) cache_46 <= `BSV_ASSIGNMENT_DELAY cache_46$D_IN;
	if (cache_47$EN) cache_47 <= `BSV_ASSIGNMENT_DELAY cache_47$D_IN;
	if (cache_48$EN) cache_48 <= `BSV_ASSIGNMENT_DELAY cache_48$D_IN;
	if (cache_49$EN) cache_49 <= `BSV_ASSIGNMENT_DELAY cache_49$D_IN;
	if (cache_5$EN) cache_5 <= `BSV_ASSIGNMENT_DELAY cache_5$D_IN;
	if (cache_50$EN) cache_50 <= `BSV_ASSIGNMENT_DELAY cache_50$D_IN;
	if (cache_51$EN) cache_51 <= `BSV_ASSIGNMENT_DELAY cache_51$D_IN;
	if (cache_52$EN) cache_52 <= `BSV_ASSIGNMENT_DELAY cache_52$D_IN;
	if (cache_53$EN) cache_53 <= `BSV_ASSIGNMENT_DELAY cache_53$D_IN;
	if (cache_54$EN) cache_54 <= `BSV_ASSIGNMENT_DELAY cache_54$D_IN;
	if (cache_55$EN) cache_55 <= `BSV_ASSIGNMENT_DELAY cache_55$D_IN;
	if (cache_56$EN) cache_56 <= `BSV_ASSIGNMENT_DELAY cache_56$D_IN;
	if (cache_57$EN) cache_57 <= `BSV_ASSIGNMENT_DELAY cache_57$D_IN;
	if (cache_58$EN) cache_58 <= `BSV_ASSIGNMENT_DELAY cache_58$D_IN;
	if (cache_59$EN) cache_59 <= `BSV_ASSIGNMENT_DELAY cache_59$D_IN;
	if (cache_6$EN) cache_6 <= `BSV_ASSIGNMENT_DELAY cache_6$D_IN;
	if (cache_60$EN) cache_60 <= `BSV_ASSIGNMENT_DELAY cache_60$D_IN;
	if (cache_61$EN) cache_61 <= `BSV_ASSIGNMENT_DELAY cache_61$D_IN;
	if (cache_62$EN) cache_62 <= `BSV_ASSIGNMENT_DELAY cache_62$D_IN;
	if (cache_63$EN) cache_63 <= `BSV_ASSIGNMENT_DELAY cache_63$D_IN;
	if (cache_64$EN) cache_64 <= `BSV_ASSIGNMENT_DELAY cache_64$D_IN;
	if (cache_65$EN) cache_65 <= `BSV_ASSIGNMENT_DELAY cache_65$D_IN;
	if (cache_66$EN) cache_66 <= `BSV_ASSIGNMENT_DELAY cache_66$D_IN;
	if (cache_67$EN) cache_67 <= `BSV_ASSIGNMENT_DELAY cache_67$D_IN;
	if (cache_68$EN) cache_68 <= `BSV_ASSIGNMENT_DELAY cache_68$D_IN;
	if (cache_69$EN) cache_69 <= `BSV_ASSIGNMENT_DELAY cache_69$D_IN;
	if (cache_7$EN) cache_7 <= `BSV_ASSIGNMENT_DELAY cache_7$D_IN;
	if (cache_70$EN) cache_70 <= `BSV_ASSIGNMENT_DELAY cache_70$D_IN;
	if (cache_71$EN) cache_71 <= `BSV_ASSIGNMENT_DELAY cache_71$D_IN;
	if (cache_72$EN) cache_72 <= `BSV_ASSIGNMENT_DELAY cache_72$D_IN;
	if (cache_73$EN) cache_73 <= `BSV_ASSIGNMENT_DELAY cache_73$D_IN;
	if (cache_74$EN) cache_74 <= `BSV_ASSIGNMENT_DELAY cache_74$D_IN;
	if (cache_75$EN) cache_75 <= `BSV_ASSIGNMENT_DELAY cache_75$D_IN;
	if (cache_76$EN) cache_76 <= `BSV_ASSIGNMENT_DELAY cache_76$D_IN;
	if (cache_77$EN) cache_77 <= `BSV_ASSIGNMENT_DELAY cache_77$D_IN;
	if (cache_78$EN) cache_78 <= `BSV_ASSIGNMENT_DELAY cache_78$D_IN;
	if (cache_79$EN) cache_79 <= `BSV_ASSIGNMENT_DELAY cache_79$D_IN;
	if (cache_8$EN) cache_8 <= `BSV_ASSIGNMENT_DELAY cache_8$D_IN;
	if (cache_80$EN) cache_80 <= `BSV_ASSIGNMENT_DELAY cache_80$D_IN;
	if (cache_81$EN) cache_81 <= `BSV_ASSIGNMENT_DELAY cache_81$D_IN;
	if (cache_82$EN) cache_82 <= `BSV_ASSIGNMENT_DELAY cache_82$D_IN;
	if (cache_83$EN) cache_83 <= `BSV_ASSIGNMENT_DELAY cache_83$D_IN;
	if (cache_84$EN) cache_84 <= `BSV_ASSIGNMENT_DELAY cache_84$D_IN;
	if (cache_85$EN) cache_85 <= `BSV_ASSIGNMENT_DELAY cache_85$D_IN;
	if (cache_86$EN) cache_86 <= `BSV_ASSIGNMENT_DELAY cache_86$D_IN;
	if (cache_87$EN) cache_87 <= `BSV_ASSIGNMENT_DELAY cache_87$D_IN;
	if (cache_88$EN) cache_88 <= `BSV_ASSIGNMENT_DELAY cache_88$D_IN;
	if (cache_89$EN) cache_89 <= `BSV_ASSIGNMENT_DELAY cache_89$D_IN;
	if (cache_9$EN) cache_9 <= `BSV_ASSIGNMENT_DELAY cache_9$D_IN;
	if (cache_90$EN) cache_90 <= `BSV_ASSIGNMENT_DELAY cache_90$D_IN;
	if (cache_91$EN) cache_91 <= `BSV_ASSIGNMENT_DELAY cache_91$D_IN;
	if (cache_92$EN) cache_92 <= `BSV_ASSIGNMENT_DELAY cache_92$D_IN;
	if (cache_93$EN) cache_93 <= `BSV_ASSIGNMENT_DELAY cache_93$D_IN;
	if (cache_94$EN) cache_94 <= `BSV_ASSIGNMENT_DELAY cache_94$D_IN;
	if (cache_95$EN) cache_95 <= `BSV_ASSIGNMENT_DELAY cache_95$D_IN;
	if (cache_96$EN) cache_96 <= `BSV_ASSIGNMENT_DELAY cache_96$D_IN;
	if (cache_97$EN) cache_97 <= `BSV_ASSIGNMENT_DELAY cache_97$D_IN;
	if (cache_98$EN) cache_98 <= `BSV_ASSIGNMENT_DELAY cache_98$D_IN;
	if (cache_99$EN) cache_99 <= `BSV_ASSIGNMENT_DELAY cache_99$D_IN;
	if (ent$EN) ent <= `BSV_ASSIGNMENT_DELAY ent$D_IN;
	if (inQ$EN) inQ <= `BSV_ASSIGNMENT_DELAY inQ$D_IN;
	if (sum_count$EN) sum_count <= `BSV_ASSIGNMENT_DELAY sum_count$D_IN;
	if (total_sum$EN) total_sum <= `BSV_ASSIGNMENT_DELAY total_sum$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cache_0 = 16'hAAAA;
    cache_1 = 16'hAAAA;
    cache_10 = 16'hAAAA;
    cache_100 = 16'hAAAA;
    cache_101 = 16'hAAAA;
    cache_102 = 16'hAAAA;
    cache_103 = 16'hAAAA;
    cache_104 = 16'hAAAA;
    cache_105 = 16'hAAAA;
    cache_106 = 16'hAAAA;
    cache_107 = 16'hAAAA;
    cache_108 = 16'hAAAA;
    cache_109 = 16'hAAAA;
    cache_11 = 16'hAAAA;
    cache_110 = 16'hAAAA;
    cache_111 = 16'hAAAA;
    cache_112 = 16'hAAAA;
    cache_113 = 16'hAAAA;
    cache_114 = 16'hAAAA;
    cache_115 = 16'hAAAA;
    cache_116 = 16'hAAAA;
    cache_117 = 16'hAAAA;
    cache_118 = 16'hAAAA;
    cache_119 = 16'hAAAA;
    cache_12 = 16'hAAAA;
    cache_120 = 16'hAAAA;
    cache_121 = 16'hAAAA;
    cache_122 = 16'hAAAA;
    cache_123 = 16'hAAAA;
    cache_124 = 16'hAAAA;
    cache_125 = 16'hAAAA;
    cache_126 = 16'hAAAA;
    cache_127 = 16'hAAAA;
    cache_13 = 16'hAAAA;
    cache_14 = 16'hAAAA;
    cache_15 = 16'hAAAA;
    cache_16 = 16'hAAAA;
    cache_17 = 16'hAAAA;
    cache_18 = 16'hAAAA;
    cache_19 = 16'hAAAA;
    cache_2 = 16'hAAAA;
    cache_20 = 16'hAAAA;
    cache_21 = 16'hAAAA;
    cache_22 = 16'hAAAA;
    cache_23 = 16'hAAAA;
    cache_24 = 16'hAAAA;
    cache_25 = 16'hAAAA;
    cache_26 = 16'hAAAA;
    cache_27 = 16'hAAAA;
    cache_28 = 16'hAAAA;
    cache_29 = 16'hAAAA;
    cache_3 = 16'hAAAA;
    cache_30 = 16'hAAAA;
    cache_31 = 16'hAAAA;
    cache_32 = 16'hAAAA;
    cache_33 = 16'hAAAA;
    cache_34 = 16'hAAAA;
    cache_35 = 16'hAAAA;
    cache_36 = 16'hAAAA;
    cache_37 = 16'hAAAA;
    cache_38 = 16'hAAAA;
    cache_39 = 16'hAAAA;
    cache_4 = 16'hAAAA;
    cache_40 = 16'hAAAA;
    cache_41 = 16'hAAAA;
    cache_42 = 16'hAAAA;
    cache_43 = 16'hAAAA;
    cache_44 = 16'hAAAA;
    cache_45 = 16'hAAAA;
    cache_46 = 16'hAAAA;
    cache_47 = 16'hAAAA;
    cache_48 = 16'hAAAA;
    cache_49 = 16'hAAAA;
    cache_5 = 16'hAAAA;
    cache_50 = 16'hAAAA;
    cache_51 = 16'hAAAA;
    cache_52 = 16'hAAAA;
    cache_53 = 16'hAAAA;
    cache_54 = 16'hAAAA;
    cache_55 = 16'hAAAA;
    cache_56 = 16'hAAAA;
    cache_57 = 16'hAAAA;
    cache_58 = 16'hAAAA;
    cache_59 = 16'hAAAA;
    cache_6 = 16'hAAAA;
    cache_60 = 16'hAAAA;
    cache_61 = 16'hAAAA;
    cache_62 = 16'hAAAA;
    cache_63 = 16'hAAAA;
    cache_64 = 16'hAAAA;
    cache_65 = 16'hAAAA;
    cache_66 = 16'hAAAA;
    cache_67 = 16'hAAAA;
    cache_68 = 16'hAAAA;
    cache_69 = 16'hAAAA;
    cache_7 = 16'hAAAA;
    cache_70 = 16'hAAAA;
    cache_71 = 16'hAAAA;
    cache_72 = 16'hAAAA;
    cache_73 = 16'hAAAA;
    cache_74 = 16'hAAAA;
    cache_75 = 16'hAAAA;
    cache_76 = 16'hAAAA;
    cache_77 = 16'hAAAA;
    cache_78 = 16'hAAAA;
    cache_79 = 16'hAAAA;
    cache_8 = 16'hAAAA;
    cache_80 = 16'hAAAA;
    cache_81 = 16'hAAAA;
    cache_82 = 16'hAAAA;
    cache_83 = 16'hAAAA;
    cache_84 = 16'hAAAA;
    cache_85 = 16'hAAAA;
    cache_86 = 16'hAAAA;
    cache_87 = 16'hAAAA;
    cache_88 = 16'hAAAA;
    cache_89 = 16'hAAAA;
    cache_9 = 16'hAAAA;
    cache_90 = 16'hAAAA;
    cache_91 = 16'hAAAA;
    cache_92 = 16'hAAAA;
    cache_93 = 16'hAAAA;
    cache_94 = 16'hAAAA;
    cache_95 = 16'hAAAA;
    cache_96 = 16'hAAAA;
    cache_97 = 16'hAAAA;
    cache_98 = 16'hAAAA;
    cache_99 = 16'hAAAA;
    ent = 12'hAAA;
    inQ =
	2048'h
    sum_count = 12'hAAA;
    total_sum = 16'hAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkFlowTest

